This README file contains information on the contents of the meta-octavo-osd32mp1 layer.

Please see the corresponding sections below for details.

Dependencies
============

  URI: https://github.com/STMicroelectronics/meta-st-stm32mp
  branch: kirkstone

  URI: https://github.com/STMicroelectronics/meta-st-openstlinux
  branch: kirkstone

  URI: https://github.com/STMicroelectronics/meta-st-scripts
  branch: kirkstone
  
  URI: https://github.com/openembedded/openembedded-core.git
  branch: kirkstone

  URI: https://github.com/openembedded/meta-openembedded.git
  branch: kirkstone
  
  URI: https://github.com/meta-qt5/meta-qt5
  branch: kirkstone

  URI: https://github.com/openembedded/bitbake.git
  branch: kirkstone
  
Patches
=======

Please submit any patches against the meta-octavo-osd32mp1 layer here

Maintainer: Neeraj Dantu <dantuguf14105(at)gmail.com>

Prerequisites
=================

- Please make sure you have at least 120GB of free disk space
- The layer was tested on Ubuntu 22.04 LTS
- Building an image may take a while based on machine capabilities

Prepare Build Environment
=================
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install -y git curl gpg python-is-python3
sudo apt-get install -y build-essential chrpath diffstat gawk gcc-multilib libegl1-mesa libgmp-dev libmpc-dev libsdl1.2-dev libssl-dev pylint python3-git python3-jinja2 python3-pip socat texinfo xterm
# install these additional packages to build on Ubuntu 2022-04
sudo apt-get install -y gnupg2 zstd git-gui bsdmainutils lz4 unzip python3-pexpect
# Configure Git to avoid complications later
git config --global user.email "first.last@organization.email"
git config --global user.name "First Last"
# follow the recommended method of installing repo see: https://source.android.com/docs/setup/download
mkdir -p ~/bin
export REPO=$(mktemp /tmp/repo.XXXXXXXXX)
curl -o ${REPO} https://storage.googleapis.com/git-repo-downloads/repo
gpg --recv-keys 8BB9AD793E8E6153AF0F9A4416530D5E920F5C65
curl -s https://storage.googleapis.com/git-repo-downloads/repo.asc | gpg --verify - ${REPO} && install -m 755 ${REPO} ~/bin/repo
# add repo to path automatically by appending the following line to your ~/.bashrc file
PATH="${HOME}/bin:${PATH}"
# use "nano", it's cooler than Vim and Emacs and installed by default on Ubuntu:
nano ~/.bashrc
# use the arrow keys to scroll to the end of the file, then add the following new line: PATH="${HOME}/bin:${PATH}"
# use the following command sequence to save the file and exit nano:
# CTRL + SHIFT + O, Enter
# CTRL + SHIFT + X, Enter
# if the above key combinations do not appear to work (e.g. you're running a Linux shell on Windows in a VM of some kind accessed over RDP), omit the SHIFT key.
# source the .bashrc file to add repo to the running environment
source ~/.bashrc

Prepare Workspace
=================
# create a workspace directory and a directory for this project, unless you already have one:
mkdir workspace
cd workspace/
mkdir kirkstone
cd kirkstone/
# create a variable defining a reasonable number (e.g. nproc-2) of threads to use for repo sync.  This will speed things up and seems to make it less likely that repo will hang during the sync.
export THREADS=$(($(nproc)-2))

# I. Adding the meta-octavo layer to your build
# Get Distribution Package: 
repo init -u https://github.com/STMicroelectronics/oe-manifest.git -b refs/tags/openstlinux-5.15-yocto-kirkstone-mp1-v22.06.15
repo sync -j$THREADS
# update repo
repo selfupdate
  
# Initialize environment
DISTRO=openstlinux-weston MACHINE=stm32mp1 source layers/meta-st/scripts/envsetup.sh
  
# Clone this repo
git clone https://github.com/octavosystems/meta-octavo-osd32mp1/
# checkout the kirkstone branch
cd meta-octavo-osd32mp1/
git checkout -t origin/kirkstone
cd ..

# Add layer to your build environment
bitbake-layers add-layer meta-octavo-osd32mp1/
  
# Change MACHINE in <BUILD_FOLDER>/conf/local.conf
#  - MACHINE = "osd32mp1-brk"  for OSD32MP1-BRK
#  - MACHINE = "osd32mp1-red"  for OSD32MP1-RED
#  - MACHINE = "osd32mp1-red-v1_2" for OSD32MP1-RED V1.2
# locate the following additional lines in the config file:
#SSTATE_DIR ?= "${TOPDIR}/sstate-cache"
#DL_DIR ?= "${TOPDIR}/downloads"
INHERIT += "rm_work"
# ...and change them to:
SSTATE_DIR ?= "${TOPDIR}/../sstate-cache"
DL_DIR ?= "${TOPDIR}/../downloads"
#INHERIT += "rm_work"
# this re-locates the SSTATE cache and downloads directory so the may be preserved in the event you feel the need to start from scratch, yet want to avoid having bitbake re-download everything.
# ensure the locale is configured as expected by the build system
sudo locale-gen en_US.UTF-8
sudo update-locale LANG=en_US.UTF-8

# II. Misc
# Generate image
# if you are concerned with how long the build takes, use "time" to find out:
# e.g. /usr/bin/time -v bitbake octavo-image-weston
bitbake octavo-image-weston

III. Program the board
  You will need Cube Programmer(>v2.4): https://www.st.com/en/development-tools/stm32cubeprog.html.
  For Linux:
  - cd <BUILD_FOLDER>/tmp-glibc/deploy/images/\$MACHINE
  - Set boot mode to USB
  - Make sure you have an SD card in the SD card slot to program
  - Connect the board to Host computer
  - STM32_Programmer_CLI -l USB
 
  This should provide board information:
     -------------------------------------------------------------------
                        STM32CubeProgrammer v2.5.0                  
      -------------------------------------------------------------------

=====  DFU Interface   =====

Total number of available STM32 device in DFU mode: 1

  Device Index           : USB1
  USB Bus Number         : 003
  USB Address Number     : 003
  Product ID             : DFU in HS Mode @Device ID /0x500, @Revision ID /0x0000
  Serial number          : 002500403239511337383434
  Firmware version       : 0x0110
  Device ID              : 0x0500

  Program the board
  - STM32_Programmer_CLI -c port=USB1 -w flashlayout_octavo-image-weston/trusted/FlashLayout_sdcard_stm32mp157c-osd32mp1-brk-trusted.tsv
  - STM32_Programmer_CLI -c port=USB1 -w flashlayout_octavo-image-weston/trusted/FlashLayout_sdcard_stm32mp157c-osd32mp1-red-trusted.tsv
  
  To Flash on Windows, use cp_image_files.py:
  Usage: 
    -b <Path to build directory>
    -d <Path to destination directory>
  - When copying files from Linux to Windows, there are no symbolic links so you have to rename the .ext4 files to remove anything between "osd32mp1-brk/red" and ".ext4"
  
  
Known Issues
=================
repo init error: https://stackoverflow.com/questions/65193998/syntaxerror-invalid-syntax-to-repo-init-in-the-aosp-code



